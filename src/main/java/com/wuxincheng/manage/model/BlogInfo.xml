<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="BlogInfo">
	<typeAlias alias="BlogInfo" type="com.wuxincheng.manage.model.BlogInfo" />

	<resultMap class="BlogInfo" id="BlogInfoMapping">
		<result property="blogId" column="BLOG_ID" />
		<result property="blogTitle" column="BLOG_TITLE" />
		<result property="blogContent" column="BLOG_CONTENT" />
		<result property="subContent" column="SUB_CONTENT" />
		<result property="blogTime" column="CREATE_TIME" />
		<result property="updateTime" column="UPDATE_TIME" />
		<result property="picLink" column="PIC_LINK" />
		<result property="readCount" column="READE_COUNT" />
		<result property="blogTypeName" column="TYPE_NAME" />
		<result property="blogType" column="BLOG_TYPE" />
		<result property="blogState" column="BLOG_STATE" />
	</resultMap>
	
	<select id="queryPager" parameterClass="java.util.Map" resultMap="BlogInfoMapping">
		SELECT 
			i.BLOG_ID, i.BLOG_TITLE, i.SUB_CONTENT, 
			LEFT(i.BLOG_CONTENT, 50) AS BLOG_CONTENT, i.READE_COUNT,
			DATE_FORMAT(i.UPDATE_TIME,'%Y%m%d %H:%i:%S') AS UPDATE_TIME, 
			DATE_FORMAT(i.CREATE_TIME,'%Y%m%d %H:%i:%S') AS CREATE_TIME, 
			i.PIC_LINK, i.BLOG_STATE, i.BLOG_TYPE, t.TYPE_NAME
		FROM T_BLOG_DETAIL_INFO i 
			LEFT JOIN T_BLOG_TYPE t ON i.BLOG_TYPE = t.TYPE_ID
		WHERE i.BLOG_STATE NOT IN ('2')
		ORDER BY i.CREATE_TIME DESC
		LIMIT #start#, #end#
	</select>
	
	<select id="queryAll" parameterClass="java.util.Map" resultMap="BlogInfoMapping">
		SELECT 
			i.BLOG_ID, i.BLOG_TITLE, i.SUB_CONTENT, 
			LEFT(i.BLOG_CONTENT, 50) AS BLOG_CONTENT, i.READE_COUNT,
			DATE_FORMAT(i.UPDATE_TIME,'%Y%m%d %H:%i:%S') AS UPDATE_TIME, 
			DATE_FORMAT(i.CREATE_TIME,'%Y%m%d %H:%i:%S') AS CREATE_TIME, 
			i.PIC_LINK, i.BLOG_STATE, i.BLOG_TYPE, t.TYPE_NAME
		FROM T_BLOG_DETAIL_INFO i 
			LEFT JOIN T_BLOG_TYPE t ON i.BLOG_TYPE = t.TYPE_ID
		WHERE i.BLOG_STATE NOT IN ('2')
	</select>
	
	<select id="queryByBlogId" parameterClass="java.lang.String" resultMap="BlogInfoMapping">
		SELECT 
			i.BLOG_ID, i.BLOG_TITLE, i.SUB_CONTENT, i.BLOG_CONTENT, i.READE_COUNT,
			DATE_FORMAT(i.UPDATE_TIME,'%Y%m%d %H:%i:%S') AS UPDATE_TIME, 
			DATE_FORMAT(i.CREATE_TIME,'%Y%m%d %H:%i:%S') AS CREATE_TIME, 
			i.PIC_LINK, i.BLOG_STATE, i.BLOG_TYPE, t.TYPE_NAME
		FROM T_BLOG_DETAIL_INFO i 
			LEFT JOIN T_BLOG_TYPE t ON i.BLOG_TYPE = t.TYPE_ID
		WHERE i.BLOG_ID = #blogId# AND i.BLOG_STATE NOT IN ('2')
	</select>
	
	<select id="queryMaxId" resultClass="java.lang.Integer">
		SELECT IFNULL(MAX(BLOG_ID+1), 0) AS BLOG_ID FROM T_BLOG_DETAIL_INFO
	</select>
	
	<select id="queryCount" resultClass="java.lang.Integer">
		SELECT COUNT(*) AS queryCount FROM T_BLOG_DETAIL_INFO WHERE BLOG_STATE NOT IN ('2')
	</select>
	
	<insert id="insert" parameterClass="BlogInfo">
		INSERT INTO T_BLOG_DETAIL_INFO(
			BLOG_ID, BLOG_TITLE, BLOG_CONTENT, CREATE_TIME, UPDATE_TIME, BLOG_TYPE, READE_COUNT, 
			SHARE_COUNT, BLOG_STATE, BLOG_LINK, PIC_LINK, AUTHOR, SUB_CONTENT)
		VALUES(
			#blogId#, #blogTitle#, #blogContent#, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #blogType#,
			0, 0, #blogState#, #blogLink#, #picLink#, #author#, #subContent#)
	</insert>
	
	<update id="update" parameterClass="BlogInfo">
		UPDATE T_BLOG_DETAIL_INFO SET 
			BLOG_TITLE = #blogTitle#, BLOG_CONTENT = #blogContent#, SUB_CONTENT = #subContent#, 
			BLOG_TYPE = #blogType#, UPDATE_TIME = CURRENT_TIMESTAMP, 
			PIC_LINK = #picLink#, BLOG_STATE = #blogState# 
		WHERE BLOG_ID = #blogId# 
	</update>
	
	<delete id="delete" parameterClass="java.lang.String">
		UPDATE T_BLOG_DETAIL_INFO SET BLOG_STATE = '2' WHERE BLOG_ID = #blogId# 
	</delete>
	
</sqlMap>